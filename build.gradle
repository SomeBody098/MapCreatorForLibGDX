plugins {
    id 'java-library'
    id 'maven-publish'
}

group = 'map.creator'
version = '2.0.0'

dependencies {
    compileOnly "com.badlogicgames.gdx:gdx-box2d:1.13.1"
    compileOnly "com.badlogicgames.gdx:gdx-freetype:1.13.1"
    compileOnly "com.badlogicgames.gdx:gdx:1.13.1"
    compileOnly "com.badlogicgames.ashley:ashley:1.7.4"

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

java {
    withSourcesJar()
    withJavadocJar()
}

jar {
    archiveBaseName = 'gdx-mapcreator'
    archiveVersion = version

    from sourceSets.main.output

    from sourceSets.main.resources

    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes 'Implementation-Title': 'GDX Map Creator',
                'Implementation-Version': archiveVersion
    }
}

task fatJar(type: Jar) {
    archiveBaseName = 'gdx-mapcreator-full'
    archiveVersion = version

    from sourceSets.main.output
    from sourceSets.main.resources

    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

task exportJar(type: Jar) {
    archiveBaseName = 'gdx-mapcreator'
    archiveVersion = version

    from sourceSets.main.output
    include '**/*.class'
    include '**/*.properties'

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
